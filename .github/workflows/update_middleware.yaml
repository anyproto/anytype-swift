name: Update middleware version

on:
  workflow_dispatch:
    inputs:
      middle_version:
        description: "Middleware version"
        required: true
        type: string
      task_name:
        description: "Task name (e.g. IOS-123)"
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  main:
    name: Update middleware version
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore cache for local build folder
        uses: actions/cache/restore@v4
        with:
          path: build
          key: build-local-tools-${{ github.sha }}
          restore-keys: |
            build-local-tools-
      
      - name: Prepare deps
        uses: ./.github/actions/prepare-deps

      - name: Xcode Cache
        uses: irgaly/xcode-cache@v1
        with:
          key: xcode-cache-deriveddata-${{ github.sha }}
          restore-keys: xcode-cache-deriveddata-
          swiftpm-cache-key: spm-soucepackages-${{ hashFiles('Anytype.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
          swiftpm-cache-restore-keys: spm-soucepackages-
          cache-read-only: true

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: '16.4'

      - name: Setup tools
        run: make setup-env
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update Middleware Version
        run: make set-middle-version v=${{ inputs.middle_version }}

      - name: Download Middleware and Generate Files
        run: make setup-middle
        env:
          MIDDLEWARE_TOKEN: ${{ secrets.MIDDLEWARE_TOKEN }}

      - name: Update git config
        uses: ./.github/actions/update-git-config
      
      - name: Create Commit
        id: commit
        run: |
          BRANCH_NAME="${{ inputs.task_name != '' && format('{0}-update-middleware-{1}', inputs.task_name, inputs.middle_version) || format('update-middleware-{0}', inputs.middle_version) }}"
          COMMIT_MESSAGE="${{ inputs.task_name != '' && format('{0} Automation: Update middleware to {1}', inputs.task_name, inputs.middle_version) || format('Automation: Update middleware to {0}', inputs.middle_version) }}"
          
          # Delete local branch if exists
          git branch -D $BRANCH_NAME || true
          # Delete remote branch if exists
          git push origin --delete $BRANCH_NAME || true
          # Create new branch
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "$COMMIT_MESSAGE" --no-verify
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run unit tests
        run: bundle exec fastlane tests skip_notify:true
        env:
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 900
          FASTLANE_XCODE_LIST_TIMEOUT: 900
      
      - name: Create and Merge PR
        run: |
          git push origin ${{ steps.commit.outputs.branch_name }} --no-verify
          
          PR_BODY="This PR updates middleware to version ${{ inputs.middle_version }}"
          gh pr create --title "${{ steps.commit.outputs.commit_message }}" --body "$PR_BODY" --base ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        

// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: commands.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

extension Anytype_Rpc.AI {

    public enum Provider: SwiftProtobuf.Enum, Swift.CaseIterable {
      public typealias RawValue = Int
      case ollama // = 0
      case openai // = 1
      case lmstudio // = 2

      /// ...
      case llamacpp // = 3
      case UNRECOGNIZED(Int)

      public init() {
        self = .ollama
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .ollama
        case 1: self = .openai
        case 2: self = .lmstudio
        case 3: self = .llamacpp
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .ollama: return 0
        case .openai: return 1
        case .lmstudio: return 2
        case .llamacpp: return 3
        case .UNRECOGNIZED(let i): return i
        }
      }

      // The compiler won't synthesize support with the UNRECOGNIZED case.
      public static let allCases: [Anytype_Rpc.AI.Provider] = [
        .ollama,
        .openai,
        .lmstudio,
        .llamacpp,
      ]

    }}

extension Anytype_Rpc.AI.Provider: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap(bytecode: "\0\u{2}\0OLLAMA\0\u{1}OPENAI\0\u{1}LMSTUDIO\0\u{1}LLAMACPP\0")
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype"

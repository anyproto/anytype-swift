// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

extension Anytype_Model_Block.Content.Text {

      public enum Style: SwiftProtobuf.Enum, Swift.CaseIterable {
        public typealias RawValue = Int
        case paragraph // = 0
        case header1 // = 1
        case header2 // = 2
        case header3 // = 3

        /// deprecated
        case header4 // = 4
        case quote // = 5
        case code // = 6

        /// currently only one block of this style can exists on a page
        case title // = 7
        case checkbox // = 8
        case marked // = 9
        case numbered // = 10
        case toggle // = 11

        /// currently only one block of this style can exists on a page
        case description_ // = 12
        case callout // = 13
        case UNRECOGNIZED(Int)

        public init() {
          self = .paragraph
        }

        public init?(rawValue: Int) {
          switch rawValue {
          case 0: self = .paragraph
          case 1: self = .header1
          case 2: self = .header2
          case 3: self = .header3
          case 4: self = .header4
          case 5: self = .quote
          case 6: self = .code
          case 7: self = .title
          case 8: self = .checkbox
          case 9: self = .marked
          case 10: self = .numbered
          case 11: self = .toggle
          case 12: self = .description_
          case 13: self = .callout
          default: self = .UNRECOGNIZED(rawValue)
          }
        }

        public var rawValue: Int {
          switch self {
          case .paragraph: return 0
          case .header1: return 1
          case .header2: return 2
          case .header3: return 3
          case .header4: return 4
          case .quote: return 5
          case .code: return 6
          case .title: return 7
          case .checkbox: return 8
          case .marked: return 9
          case .numbered: return 10
          case .toggle: return 11
          case .description_: return 12
          case .callout: return 13
          case .UNRECOGNIZED(let i): return i
          }
        }

        // The compiler won't synthesize support with the UNRECOGNIZED case.
        public static let allCases: [Anytype_Model_Block.Content.Text.Style] = [
          .paragraph,
          .header1,
          .header2,
          .header3,
          .header4,
          .quote,
          .code,
          .title,
          .checkbox,
          .marked,
          .numbered,
          .toggle,
          .description_,
          .callout,
        ]

      }}

extension Anytype_Model_Block.Content.Text.Style: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap(bytecode: "\0\u{2}\0Paragraph\0\u{1}Header1\0\u{1}Header2\0\u{1}Header3\0\u{1}Header4\0\u{1}Quote\0\u{1}Code\0\u{1}Title\0\u{1}Checkbox\0\u{1}Marked\0\u{1}Numbered\0\u{1}Toggle\0\u{1}Description\0\u{1}Callout\0")
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"

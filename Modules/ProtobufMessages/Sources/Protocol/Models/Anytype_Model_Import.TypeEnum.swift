// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

extension Anytype_Model_Import {

  public enum TypeEnum: SwiftProtobuf.Enum, Swift.CaseIterable {
    public typealias RawValue = Int
    case notion // = 0
    case markdown // = 1

    /// external developers use it
    case external // = 2
    case pb // = 3
    case html // = 4
    case txt // = 5
    case csv // = 6

    /// Markdown with obsidian improvements
    case obsidian // = 7
    case UNRECOGNIZED(Int)

    public init() {
      self = .notion
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .notion
      case 1: self = .markdown
      case 2: self = .external
      case 3: self = .pb
      case 4: self = .html
      case 5: self = .txt
      case 6: self = .csv
      case 7: self = .obsidian
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .notion: return 0
      case .markdown: return 1
      case .external: return 2
      case .pb: return 3
      case .html: return 4
      case .txt: return 5
      case .csv: return 6
      case .obsidian: return 7
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    public static let allCases: [Anytype_Model_Import.TypeEnum] = [
      .notion,
      .markdown,
      .external,
      .pb,
      .html,
      .txt,
      .csv,
      .obsidian,
    ]

  }}

extension Anytype_Model_Import.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap(bytecode: "\0\u{2}\0Notion\0\u{1}Markdown\0\u{1}External\0\u{1}Pb\0\u{1}Html\0\u{1}Txt\0\u{1}Csv\0\u{1}Obsidian\0")
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"

// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf
public struct Anytype_Model_ChatState: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// unread messages
  public var messages: Anytype_Model_ChatState.UnreadState {
    get {return _messages ?? Anytype_Model_ChatState.UnreadState()}
    set {_messages = newValue}
  }
  /// Returns true if `messages` has been explicitly set.
  public var hasMessages: Bool {return self._messages != nil}
  /// Clears the value of `messages`. Subsequent reads from it will return its default value.
  public mutating func clearMessages() {self._messages = nil}

  /// unread mentions
  public var mentions: Anytype_Model_ChatState.UnreadState {
    get {return _mentions ?? Anytype_Model_ChatState.UnreadState()}
    set {_mentions = newValue}
  }
  /// Returns true if `mentions` has been explicitly set.
  public var hasMentions: Bool {return self._mentions != nil}
  /// Clears the value of `mentions`. Subsequent reads from it will return its default value.
  public mutating func clearMentions() {self._mentions = nil}

  /// reflects the state of the chat db at the moment of sending response/event that includes this state
  public var lastStateID: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _messages: Anytype_Model_ChatState.UnreadState? = nil
  fileprivate var _mentions: Anytype_Model_ChatState.UnreadState? = nil
}

extension Anytype_Model_ChatState: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ChatState"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "messages"),
    2: .same(proto: "mentions"),
    3: .same(proto: "lastStateId"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._messages) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._mentions) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.lastStateID) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._messages {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try { if let v = self._mentions {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    if !self.lastStateID.isEmpty {
      try visitor.visitSingularStringField(value: self.lastStateID, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Anytype_Model_ChatState, rhs: Anytype_Model_ChatState) -> Bool {
    if lhs._messages != rhs._messages {return false}
    if lhs._mentions != rhs._mentions {return false}
    if lhs.lastStateID != rhs.lastStateID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"

// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

public enum Anytype_Model_InviteType: SwiftProtobuf.Enum, Swift.CaseIterable {
  public typealias RawValue = Int

  /// aclKey contains the key to sign the ACL record
  case member // = 0

  /// guestKey contains the privateKey of the guest user
  case guest // = 1

  /// aclKey contains the key to sign the ACL record, but no approval needed
  case withoutApprove // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .member
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .member
    case 1: self = .guest
    case 2: self = .withoutApprove
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .member: return 0
    case .guest: return 1
    case .withoutApprove: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Anytype_Model_InviteType] = [
    .member,
    .guest,
    .withoutApprove,
  ]

}

extension Anytype_Model_InviteType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap(bytecode: "\0\u{2}\0Member\0\u{1}Guest\0\u{1}WithoutApprove\0")
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"

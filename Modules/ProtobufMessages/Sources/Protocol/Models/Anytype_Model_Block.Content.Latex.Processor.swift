// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

extension Anytype_Model_Block.Content.Latex {

      public enum Processor: SwiftProtobuf.Enum, Swift.CaseIterable {
        public typealias RawValue = Int
        case latex // = 0
        case mermaid // = 1
        case chart // = 2
        case youtube // = 3
        case vimeo // = 4
        case soundcloud // = 5
        case googleMaps // = 6
        case miro // = 7
        case figma // = 8
        case twitter // = 9
        case openStreetMap // = 10
        case reddit // = 11
        case facebook // = 12
        case instagram // = 13
        case telegram // = 14
        case githubGist // = 15
        case codepen // = 16
        case bilibili // = 17
        case excalidraw // = 18
        case kroki // = 19
        case graphviz // = 20
        case sketchfab // = 21
        case image // = 22
        case drawio // = 23
        case spotify // = 24
        case UNRECOGNIZED(Int)

        public init() {
          self = .latex
        }

        public init?(rawValue: Int) {
          switch rawValue {
          case 0: self = .latex
          case 1: self = .mermaid
          case 2: self = .chart
          case 3: self = .youtube
          case 4: self = .vimeo
          case 5: self = .soundcloud
          case 6: self = .googleMaps
          case 7: self = .miro
          case 8: self = .figma
          case 9: self = .twitter
          case 10: self = .openStreetMap
          case 11: self = .reddit
          case 12: self = .facebook
          case 13: self = .instagram
          case 14: self = .telegram
          case 15: self = .githubGist
          case 16: self = .codepen
          case 17: self = .bilibili
          case 18: self = .excalidraw
          case 19: self = .kroki
          case 20: self = .graphviz
          case 21: self = .sketchfab
          case 22: self = .image
          case 23: self = .drawio
          case 24: self = .spotify
          default: self = .UNRECOGNIZED(rawValue)
          }
        }

        public var rawValue: Int {
          switch self {
          case .latex: return 0
          case .mermaid: return 1
          case .chart: return 2
          case .youtube: return 3
          case .vimeo: return 4
          case .soundcloud: return 5
          case .googleMaps: return 6
          case .miro: return 7
          case .figma: return 8
          case .twitter: return 9
          case .openStreetMap: return 10
          case .reddit: return 11
          case .facebook: return 12
          case .instagram: return 13
          case .telegram: return 14
          case .githubGist: return 15
          case .codepen: return 16
          case .bilibili: return 17
          case .excalidraw: return 18
          case .kroki: return 19
          case .graphviz: return 20
          case .sketchfab: return 21
          case .image: return 22
          case .drawio: return 23
          case .spotify: return 24
          case .UNRECOGNIZED(let i): return i
          }
        }

        // The compiler won't synthesize support with the UNRECOGNIZED case.
        public static let allCases: [Anytype_Model_Block.Content.Latex.Processor] = [
          .latex,
          .mermaid,
          .chart,
          .youtube,
          .vimeo,
          .soundcloud,
          .googleMaps,
          .miro,
          .figma,
          .twitter,
          .openStreetMap,
          .reddit,
          .facebook,
          .instagram,
          .telegram,
          .githubGist,
          .codepen,
          .bilibili,
          .excalidraw,
          .kroki,
          .graphviz,
          .sketchfab,
          .image,
          .drawio,
          .spotify,
        ]

      }}

extension Anytype_Model_Block.Content.Latex.Processor: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap(bytecode: "\0\u{2}\0Latex\0\u{1}Mermaid\0\u{1}Chart\0\u{1}Youtube\0\u{1}Vimeo\0\u{1}Soundcloud\0\u{1}GoogleMaps\0\u{1}Miro\0\u{1}Figma\0\u{1}Twitter\0\u{1}OpenStreetMap\0\u{1}Reddit\0\u{1}Facebook\0\u{1}Instagram\0\u{1}Telegram\0\u{1}GithubGist\0\u{1}Codepen\0\u{1}Bilibili\0\u{1}Excalidraw\0\u{1}Kroki\0\u{1}Graphviz\0\u{1}Sketchfab\0\u{1}Image\0\u{1}Drawio\0\u{1}Spotify\0")
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"

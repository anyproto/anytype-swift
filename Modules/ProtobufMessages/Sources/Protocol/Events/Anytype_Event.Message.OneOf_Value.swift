// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pb/protos/events.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import SwiftProtobuf

extension Anytype_Event.Message {

    public enum OneOf_Value: Equatable, Sendable {
      case accountShow(Anytype_Event.Account.Show)
      case accountDetails(Anytype_Event.Account.Details)
      case accountConfigUpdate(Anytype_Event.Account.Config.Update)
      case accountUpdate(Anytype_Event.Account.Update)
      case accountLinkChallenge(Anytype_Event.Account.LinkChallenge)
      case accountLinkChallengeHide(Anytype_Event.Account.LinkChallengeHide)
      case objectDetailsSet(Anytype_Event.Object.Details.Set)
      case objectDetailsAmend(Anytype_Event.Object.Details.Amend)
      case objectDetailsUnset(Anytype_Event.Object.Details.Unset)
      case objectRelationsAmend(Anytype_Event.Object.Relations.Amend)
      case objectRelationsRemove(Anytype_Event.Object.Relations.Remove)
      case objectRemove(Anytype_Event.Object.Remove)
      case objectClose(Anytype_Event.Object.Close)
      case objectRestrictionsSet(Anytype_Event.Object.Restrictions.Set)
      case subscriptionAdd(Anytype_Event.Object.Subscription.Add)
      case subscriptionRemove(Anytype_Event.Object.Subscription.Remove)
      case subscriptionPosition(Anytype_Event.Object.Subscription.Position)
      case subscriptionCounters(Anytype_Event.Object.Subscription.Counters)
      case subscriptionGroups(Anytype_Event.Object.Subscription.Groups)
      case blockAdd(Anytype_Event.Block.Add)
      case blockDelete(Anytype_Event.Block.Delete)
      case filesUpload(Anytype_Event.Block.FilesUpload)
      case marksInfo(Anytype_Event.Block.MarksInfo)
      case blockSetFields(Anytype_Event.Block.Set.Fields)
      case blockSetChildrenIds(Anytype_Event.Block.Set.ChildrenIds)
      case blockSetRestrictions(Anytype_Event.Block.Set.Restrictions)
      case blockSetBackgroundColor(Anytype_Event.Block.Set.BackgroundColor)
      case blockSetText(Anytype_Event.Block.Set.Text)
      case blockSetFile(Anytype_Event.Block.Set.File)
      case blockSetLink(Anytype_Event.Block.Set.Link)
      case blockSetBookmark(Anytype_Event.Block.Set.Bookmark)
      case blockSetAlign(Anytype_Event.Block.Set.Align)
      case blockSetDiv(Anytype_Event.Block.Set.Div)
      case blockSetRelation(Anytype_Event.Block.Set.Relation)
      case blockSetLatex(Anytype_Event.Block.Set.Latex)
      case blockSetVerticalAlign(Anytype_Event.Block.Set.VerticalAlign)
      case blockSetTableRow(Anytype_Event.Block.Set.TableRow)
      case blockSetWidget(Anytype_Event.Block.Set.Widget)
      case blockDataviewViewSet(Anytype_Event.Block.Dataview.ViewSet)
      case blockDataviewViewDelete(Anytype_Event.Block.Dataview.ViewDelete)
      case blockDataviewViewOrder(Anytype_Event.Block.Dataview.ViewOrder)
      /// deprecated, source is no longer used
      case blockDataviewSourceSet(Anytype_Event.Block.Dataview.SourceSet)
      case blockDataViewGroupOrderUpdate(Anytype_Event.Block.Dataview.GroupOrderUpdate)
      case blockDataViewObjectOrderUpdate(Anytype_Event.Block.Dataview.ObjectOrderUpdate)
      case blockDataviewRelationDelete(Anytype_Event.Block.Dataview.RelationDelete)
      case blockDataviewRelationSet(Anytype_Event.Block.Dataview.RelationSet)
      case blockDataviewViewUpdate(Anytype_Event.Block.Dataview.ViewUpdate)
      case blockDataviewTargetObjectIDSet(Anytype_Event.Block.Dataview.TargetObjectIdSet)
      case blockDataviewIsCollectionSet(Anytype_Event.Block.Dataview.IsCollectionSet)
      /// deprecated
      case blockDataviewOldRelationDelete(Anytype_Event.Block.Dataview.OldRelationDelete)
      /// deprecated
      case blockDataviewOldRelationSet(Anytype_Event.Block.Dataview.OldRelationSet)
      case userBlockJoin(Anytype_Event.User.Block.Join)
      case userBlockLeft(Anytype_Event.User.Block.Left)
      case userBlockSelectRange(Anytype_Event.User.Block.SelectRange)
      case userBlockTextRange(Anytype_Event.User.Block.TextRange)
      case ping(Anytype_Event.Ping)
      case processNew(Anytype_Event.Process.New)
      case processUpdate(Anytype_Event.Process.Update)
      case processDone(Anytype_Event.Process.Done)
      case threadStatus(Anytype_Event.Status.Thread)
      case fileLimitReached(Anytype_Event.File.LimitReached)
      case fileSpaceUsage(Anytype_Event.File.SpaceUsage)
      case fileLocalUsage(Anytype_Event.File.LocalUsage)
      case fileLimitUpdated(Anytype_Event.File.LimitUpdated)
      case notificationSend(Anytype_Event.Notification.Send)
      case notificationUpdate(Anytype_Event.Notification.Update)
      case payloadBroadcast(Anytype_Event.Payload.Broadcast)
      case membershipUpdate(Anytype_Event.Membership.Update)
      case spaceSyncStatusUpdate(Anytype_Event.Space.SyncStatus.Update)
      case spaceAutoWidgetAdded(Anytype_Event.Space.AutoWidgetAdded)
      case p2PStatusUpdate(Anytype_Event.P2PStatus.Update)
      case importFinish(Anytype_Event.Import.Finish)
      case chatAdd(Anytype_Event.Chat.Add)
      case chatUpdate(Anytype_Event.Chat.Update)
      case chatUpdateReactions(Anytype_Event.Chat.UpdateReactions)
      /// received to update per-message read status (if needed to highlight the unread messages in the UI)
      case chatUpdateMessageReadStatus(Anytype_Event.Chat.UpdateMessageReadStatus)
      /// received to update per-message mention read status (if needed to highlight the unread mentions in the UI)
      case chatUpdateMentionReadStatus(Anytype_Event.Chat.UpdateMentionReadStatus)
      case chatDelete(Anytype_Event.Chat.Delete)
      /// in case new unread messages received or chat state changed (e.g. message read on another device)
      case chatStateUpdate(Anytype_Event.Chat.UpdateState)

    }}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype"
